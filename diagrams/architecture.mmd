```mermaid
graph TB
    subgraph "CLIENT LAYER"
        Client[Client Application<br/>Web UI / Mobile App]
    end
    
    subgraph "API LAYER"
        Controller[OrderController<br/>REST API Endpoints]
        Service[OrderService<br/>Business Logic]
    end
    
    subgraph "MESSAGING LAYER"
        Producer[OrderProducer<br/>Send Messages]
        Consumer[OrderConsumer<br/>Receive Messages]
    end
    
    subgraph "RABBITMQ BROKER"
        Exchange[order.exchange<br/>Direct Exchange]
        DLX[order.dlx.exchange<br/>Dead Letter Exchange]
        
        subgraph "QUEUES"
            PendingQ[(order.pending.queue<br/>TTL: 15 min<br/>DLX: order.dlx.exchange)]
            PaidQ[(order.paid.queue)]
            CancelledQ[(order.cancelled.queue)]
        end
    end
    
    subgraph "DATA LAYER"
        DB[(Database<br/>Order Storage)]
    end
    
    subgraph "NOTIFICATION LAYER"
        Email[Email Service<br/>Send Notifications]
    end
    
    Client -->|HTTP Request| Controller
    Controller --> Service
    Service --> Producer
    
    Producer -->|order.pending| Exchange
    Producer -->|order.paid| Exchange
    Producer -->|order.cancelled| Exchange
    
    Exchange -->|routing: order.pending| PendingQ
    Exchange -->|routing: order.paid| PaidQ
    
    PendingQ -->|Message Expire| DLX
    DLX -->|routing: order.cancelled| CancelledQ
    
    PendingQ -->|Listen| Consumer
    PaidQ -->|Listen| Consumer
    CancelledQ -->|Listen| Consumer
    
    Consumer --> Service
    Service --> DB
    Service --> Email
    
    Email -->|Notifications| Client
    
    style Client fill:#4f46e5,color:#fff
    style Exchange fill:#fbbf24,stroke:#f59e0b,stroke-width:2px
    style DLX fill:#ef4444,color:#fff,stroke:#991b1b,stroke-width:3px
    style PendingQ fill:#fef3c7,stroke:#f59e0b,stroke-width:3px
    style PaidQ fill:#d1fae5,stroke:#10b981,stroke-width:3px
    style CancelledQ fill:#fee2e2,stroke:#ef4444,stroke-width:3px
    style DB fill:#dbeafe,stroke:#3b82f6,stroke-width:2px
```
